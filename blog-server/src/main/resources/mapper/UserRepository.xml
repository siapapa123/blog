<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.blog.repository.UserRepository">
    <resultMap id="BaseResultMap" type="com.blog.model.User">
        <id column="id" jdbcType="BIGINT" property="id" />
        <result column="username" jdbcType="VARCHAR" property="username" />
        <result column="password" jdbcType="VARCHAR" property="password" />
        <result column="email" jdbcType="VARCHAR" property="email" />
        <result column="avatar_url" jdbcType="VARCHAR" property="avatarUrl" />
        <result column="role" jdbcType="VARCHAR" property="role" />
        <result column="is_deleted" jdbcType="BOOLEAN" property="isDeleted" />
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    </resultMap>

    <sql id="Base_Column_List">
        id, username, password, email, avatar_url, role,
        is_deleted, create_time, update_time
    </sql>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from users
        where id = #{id} and is_deleted = false
    </select>

    <select id="selectByUsername" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from users
        where username = #{username} and is_deleted = false
    </select>

    <select id="selectByEmail" parameterType="java.lang.String" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from users
        where email = #{email} and is_deleted = false
    </select>

    <insert id="insert" parameterType="com.blog.model.User" useGeneratedKeys="true" keyProperty="id">
        insert into users (username, password, email, 
            avatar_url, role, is_deleted, 
            create_time, update_time)
        values (#{username}, #{password}, #{email}, 
            #{avatarUrl}, #{role}, #{isDeleted},
            #{createTime}, #{updateTime})
    </insert>

    <update id="update" parameterType="com.blog.model.User">
        update users
        <set>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="email != null">email = #{email},</if>
            <if test="avatarUrl != null">avatar_url = #{avatarUrl},</if>
            <if test="role != null">role = #{role},</if>
            update_time = CURRENT_TIMESTAMP
        </set>
        where id = #{id} and is_deleted = false
    </update>

    <update id="deleteById">
        update users
        set is_deleted = true,
            update_time = CURRENT_TIMESTAMP
        where id = #{id} and is_deleted = false
    </update>

    <select id="selectList" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from users
        where is_deleted = false
        <if test="keyword != null and keyword != ''">
            and (
                username like concat('%', #{keyword}, '%')
                or email like concat('%', #{keyword}, '%')
            )
        </if>
        order by create_time desc
    </select>

    <select id="selectByIds" resultMap="BaseResultMap">
        select 
        <include refid="Base_Column_List" />
        from users
        where id in
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
        and is_deleted = false
    </select>
</mapper> 